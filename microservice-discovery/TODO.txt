Service Cache

Each of the above query methods calls ZooKeeper directly. If you need more than occasional querying of services you can use the ServiceCache. It caches in memory the list of instances for a particular service. It uses a Watcher to keep the list up to date.

You allocate a ServiceCache via the builder returned by ServiceDiscovery.serviceCacheBuilder(). The ServiceCache object must be started by calling start() and, when done, you should call close(). You can get the currently known list of instances for the service by calling:

public Collection<ServiceInstance<T>> getInstances()
Return the current list of instances. NOTE: there is no guarantee of freshness. This is merely
the last known list of instances. However, the list is updated via a ZooKeeper watcher so it
should be fresh within a window of a second or two.
ServiceCache supports a listener that gets notified when Watcher has updated the list of instances:

/**
 * Listener for changes to a service cache
 */
public interface ServiceCacheListener extends ConnectionStateListener
{
    /**
     * Called when the cache has changed (instances added/deleted, etc.)
     */
    public void cacheChanged();
}